services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    # container_name: abdullahmia/syncmeds-api:latest
    container_name: syncmeds-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${PRODUCTION_JWT_SECRET}
      - JWT_ACCESS_EXPIRATION_MINUTES=${PRODUCTION_JWT_ACCESS_EXPIRATION_MINUTES}
      - REFRESH_EXPIRATION_DAYS=${PRODUCTION_JWT_REFRESH_EXPIRATION_DAYS}
      - JWT_RESET_PASSWORD_EXPIRATION_MINUTES=${PRODUCTION_JWT_RESET_PASSWORD_EXPIRATION_MINUTES}
      - JWT_VERIFY_EMAIL_EXPIRATION_MINUTES=${PRODUCTION_JWT_VERIFY_EMAIL_EXPIRATION_MINUTES}
      - SMTP_SERVICE=${PRODUCTION_SMTP_SERVICE}
      - SMTP_USERNAME=${PRODUCTION_SMTP_USERNAME}
      - SMTP_PASSWORD=${PRODUCTION_SMTP_PASSWORD}
      - EMAIL_FROM=${PRODUCTION_EMAIL_FROM}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USERNAME=default
      - REDIS_PASSWORD=${PRODUCTION_REDIS_PASSWORD}
      - CLIENT_URL=${PRODUCTION_CLIENT_URL}
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis/redis-stack:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
